version: 2
jobs:
  build:
    machine: 
      docker_layer_caching: true
    steps: 
      - checkout

  # publish jobs require $DOCKERHUB_USER, $DOCKERHUB_PASS defined
  amd64:
    machine:
      docker_layer_caching: true
    steps:
      - checkout  
      - run:
          command: |
            LATEST_TAG="${CIRCLE_TAG:1}"
            DOCKERHUB_REPO="btcpayserver/letsencrypt-nginx-proxy-companion"
            DOCKERHUB_DESTINATION="$DOCKERHUB_REPO:$LATEST_TAG-amd64"
            DOCKERHUB_DOCKEFILE="linuxamd64.Dockerfile"
            #
            echo "Pushing $DOCKERHUB_DOCKEFILE to dockerhub repository $DOCKERHUB_DESTINATION"
            sudo docker login --username=$DOCKERHUB_USER --password=$DOCKERHUB_PASS
            sudo docker build --pull -t $DOCKERHUB_DESTINATION -f "$DOCKERHUB_DOCKEFILE" .
            sudo docker push $DOCKERHUB_DESTINATION

  arm32v7:
    machine:
      docker_layer_caching: true
    steps:
      - checkout  
      - run:
          command: |
            LATEST_TAG="${CIRCLE_TAG:1}"
            DOCKERHUB_REPO="btcpayserver/letsencrypt-nginx-proxy-companion"
            DOCKERHUB_DESTINATION="$DOCKERHUB_REPO:$LATEST_TAG-arm32v7"
            DOCKERHUB_DOCKEFILE="linuxarm32v7.Dockerfile"
            #
            # Make sure the builder is copy the arm emulator
            sudo docker run --rm --privileged multiarch/qemu-user-static:register --reset
            sudo apt update
            sudo apt install -y qemu qemu-user-static qemu-user binfmt-support
            sudo cp /usr/bin/qemu-arm-static "$(dirname "$DOCKERHUB_DOCKEFILE")/qemu-arm-static"
            sed -i -e 's/#EnableQEMU //g' "$DOCKERHUB_DOCKEFILE"
            #
            echo "Pushing $DOCKERHUB_DOCKEFILE to dockerhub repository $DOCKERHUB_DESTINATION"
            sudo docker login --username=$DOCKERHUB_USER --password=$DOCKERHUB_PASS
            sudo docker build --pull -t $DOCKERHUB_DESTINATION -f "$DOCKERHUB_DOCKEFILE" .
            sudo docker push $DOCKERHUB_DESTINATION
  arm64v8:
    machine:
      docker_layer_caching: true
    steps:
      - checkout  
      - run:
          command: |
            LATEST_TAG="${CIRCLE_TAG:1}"
            DOCKERHUB_REPO="btcpayserver/letsencrypt-nginx-proxy-companion"
            DOCKERHUB_DESTINATION="$DOCKERHUB_REPO:$LATEST_TAG-arm64v8"
            DOCKERHUB_DOCKEFILE="linuxarm64v8.Dockerfile"
            #
            # Make sure the builder is copy the arm emulator
            sudo docker run --rm --privileged multiarch/qemu-user-static:register --reset
            #
            echo "Pushing $DOCKERHUB_DOCKEFILE to dockerhub repository $DOCKERHUB_DESTINATION"
            sudo docker login --username=$DOCKERHUB_USER --password=$DOCKERHUB_PASS
            sudo docker build --pull -t $DOCKERHUB_DESTINATION -f "$DOCKERHUB_DOCKEFILE" .
            sudo docker push $DOCKERHUB_DESTINATION
  multiarch:
    machine:
      enabled: true
      image: circleci/classic:201808-01
    steps:
      - run:
          command: |
            # Turn on Experimental features
            sudo mkdir $HOME/.docker
            sudo sh -c 'echo "{ \"experimental\": \"enabled\" }" >> $HOME/.docker/config.json'
            LATEST_TAG="${CIRCLE_TAG:1}"
            DOCKERHUB_REPO="btcpayserver/letsencrypt-nginx-proxy-companion"
            DOCKERHUB_DESTINATION="$DOCKERHUB_REPO:$LATEST_TAG"
            #
            sudo docker login --username=$DOCKERHUB_USER --password=$DOCKERHUB_PASS
            sudo docker manifest create --amend $DOCKERHUB_DESTINATION $DOCKERHUB_DESTINATION-amd64 $DOCKERHUB_DESTINATION-arm32v7 $DOCKERHUB_DESTINATION-arm64v8
            sudo docker manifest annotate $DOCKERHUB_DESTINATION $DOCKERHUB_DESTINATION-amd64 --os linux --arch amd64
            sudo docker manifest annotate $DOCKERHUB_DESTINATION $DOCKERHUB_DESTINATION-arm32v7 --os linux --arch arm --variant v7
            sudo docker manifest annotate $DOCKERHUB_DESTINATION $DOCKERHUB_DESTINATION-arm64v8 --os linux --arch arm64 --variant v8
            sudo docker manifest push $DOCKERHUB_DESTINATION -p

workflows:
  version: 2
  publish:
    jobs:
      - amd64:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - arm32v7:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - arm64v8:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
      - multiarch:
          requires:
            - amd64
            - arm32v7
            - arm64v8
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
